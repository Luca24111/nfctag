{% extends 'base.html.twig' %}

{% block title %}In Magazzino{% endblock %}

{% block body %}
<style>
  body {
    background: var(--bg-primary);
    color: var(--text-primary);
    font-family: 'SF Pro Text', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    margin: 0;
    padding: 0;
    letter-spacing: -0.04em;
  }

  .magazzino-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }

  /* Header della pagina */
  .page-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 2rem;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .header-info {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .header-icon {
    width: 50px;
    height: 50px;
    background: linear-gradient(135deg, #34c759 0%, #30d158 100%);
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    color: white;
    box-shadow: 0 4px 15px rgba(52, 199, 89, 0.3);
  }

  .header-text h1 {
    margin: 0;
    font-size: 2rem;
    font-weight: 700;
    color: #fff;
  }

  .header-text p {
    margin: 0.25rem 0 0 0;
    color: #999;
    font-size: 1rem;
  }



  .add-product-btn {
    background: linear-gradient(135deg, #007aff 0%, #0056cc 100%);
    color: white;
    border: none;
    border-radius: 12px;
    padding: 0.75rem 1.5rem;
    font-size: 0.9rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    box-shadow: 0 4px 15px rgba(0, 122, 255, 0.3);
  }

  .add-product-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 122, 255, 0.4);
  }

  .back-btn {
    background: rgba(255, 255, 255, 0.1);
    color: white;
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 12px;
    padding: 0.75rem 1.5rem;
    font-size: 0.9rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
  }

  .back-btn:hover {
    background: rgba(255, 255, 255, 0.15);
    border-color: rgba(255, 255, 255, 0.3);
    transform: translateY(-2px);
  }

  /* Barra di ricerca */
  .search-section {
    margin-bottom: 2rem;
  }

  .search-container {
    position: relative;
    max-width: 500px;
    margin: 0 auto;
    display: flex;
    align-items: center;
  }

  .search-input {
    width: 100%;
    background: #1e1e1e;
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    padding: 1rem 1rem 1rem 3rem;
    font-size: 1rem;
    color: #fff;
    font-family: inherit;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
  }

  .search-input:focus {
    outline: none;
    border-color: #34c759;
    box-shadow: 0 4px 20px rgba(52, 199, 89, 0.2);
  }

  .search-input::placeholder {
    color: #666;
  }

  .search-icon {
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
    color: #666;
    font-size: 1.1rem;
  }

  .search-results {
    text-align: center;
    margin-top: 1rem;
    color: #999;
    font-size: 0.9rem;
  }

  /* Controlli visualizzazione */
  .view-controls {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 2rem;
    background: linear-gradient(135deg, #1e1e1e 0%, #2a2a2a 100%);
    border-radius: 12px;
    padding: 0.5rem;
    border: 1px solid rgba(255, 255, 255, 0.1);
    max-width: fit-content;
    margin-left: auto;
    margin-right: auto;
    margin-top: 20px;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
    backdrop-filter: blur(10px);
  }

  .view-btn {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    color: #999;
    padding: 0.6rem;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    font-size: 1rem;
    font-weight: 500;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    overflow: hidden;
    width: 40px;
    height: 40px;
  }

  .view-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    transition: left 0.5s;
  }

  .view-btn:hover::before {
    left: 100%;
  }

  .view-btn:hover {
    background: rgba(255, 255, 255, 0.1);
    color: var(--text-primary);
    transform: translateY(-2px);
    box-shadow: 0 4px 15px var(--shadow-color);
  }

  .view-btn.active {
    background: linear-gradient(135deg, #34c759 0%, #30d158 100%);
    border-color: #34c759;
    color: var(--text-primary);
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(52, 199, 89, 0.4);
  }

  .view-btn i {
    font-size: 1.1rem;
    transition: transform 0.3s ease;
  }

  .view-btn:hover i {
    transform: scale(1.1);
  }

  .view-btn.active i {
    transform: scale(1.1);
  }

  /* Filtri */
  .filters {
    display: flex;
    gap: 1rem;
    align-items: end;
    background: linear-gradient(135deg, #1e1e1e 0%, #2a2a2a 100%);
    border-radius: 12px;
    padding: 1rem;
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    backdrop-filter: blur(10px);
  }

  .filter-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    position: relative;
  }

  .filter-group label {
    color: rgba(255, 255, 255, 0.8);
    font-size: 0.8rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.3px;
  }

  .filter-select {
    background: rgba(255, 255, 255, 0.08);
    border: 1px solid rgba(255, 255, 255, 0.15);
    border-radius: 8px;
    color: #fff;
    padding: 0.5rem 0.75rem;
    font-size: 0.85rem;
    font-weight: 500;
    backdrop-filter: blur(10px);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    min-width: 140px;
    cursor: pointer;
    position: relative;
  }

  .filter-select:hover {
    background: rgba(255, 255, 255, 0.12);
    border-color: rgba(255, 255, 255, 0.25);
    transform: translateY(-1px);
  }

  .filter-select:focus {
    outline: none;
    background: rgba(255, 255, 255, 0.15);
    border-color: #34c759;
    box-shadow: 0 0 0 2px rgba(52, 199, 89, 0.1);
  }

  .filter-select option {
    background: #1e1e1e;
    color: #fff;
    padding: 0.5rem;
  }

  /* Griglia prodotti - 1 colonna (default) */
  .products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
    margin-bottom: 3rem;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Griglia prodotti - 2 colonne */
  .products-grid.view-2cols {
    grid-template-columns: repeat(2, 1fr);
    gap: 1.5rem;
  }

  /* Griglia prodotti - Elenco */
  .products-grid.view-list {
    grid-template-columns: 1fr;
    gap: 0.75rem;
  }

  .products-grid.view-list .product-card {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    padding: 0;
    transition: all 0.3s ease;
    border-radius: 12px;
    background: linear-gradient(135deg, #1e1e1e 0%, #2a2a2a 100%);
    position: relative;
  }

  .products-grid.view-list .product-image,
  .products-grid.view-list .placeholder {
    width: 100%;
    height: 70px;
    margin: 0 !important;
    border-radius: 12px;
    object-fit: cover;
  }

  .products-grid.view-list .product-content {
    width: 100%;
    padding: 1rem;
    margin: 0 !important;
    display: flex;
    align-items: center;
    gap: 1rem;
    min-height: 70px;
    background: rgba(30, 30, 30, 0.8);
    backdrop-filter: blur(10px);
  }

  .products-grid.view-list .product-title {
    margin: 0;
    font-size: 1rem;
    font-weight: 600;
    color: #fff;
    flex: 1;
    min-width: 0;
  }

  .products-grid.view-list .product-meta {
    flex-direction: row;
    align-items: center;
    gap: 1rem;
    flex-shrink: 0;
  }

  .products-grid.view-list .meta-item {
    font-size: 0.8rem;
    gap: 0.5rem;
    white-space: nowrap;
  }

  .products-grid.view-list .scaffale-badge {
    padding: 0.25rem 0.75rem;
    font-size: 0.75rem;
    border-radius: 8px;
  }

  /* Nascondi il bollino della card principale nelle altre visualizzazioni */
  .product-status.list-view-status {
    display: none;
  }

  /* Mostra il bollino della card principale solo nella visualizzazione lista */
  .products-grid.view-list .product-status.list-view-status {
    display: block;
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    width: 12px;
    height: 12px;
    z-index: 10;
  }

  /* Nascondi il bollino dell'immagine nella visualizzazione lista */
  .products-grid.view-list .product-image-container .product-status {
    display: none;
  }

  .product-card {
    background: linear-gradient(135deg, #1e1e1e 0%, #2a2a2a 100%);
    border-radius: 20px;
    overflow: hidden;
    border: 1px solid rgba(255, 255, 255, 0.08);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;
    position: relative;
    backdrop-filter: blur(10px);
  }

  .product-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(52, 199, 89, 0.1) 0%, transparent 100%);
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }

  .product-card:hover::before {
    opacity: 1;
  }

  .product-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);
    border-color: rgba(52, 199, 89, 0.3);
  }

  /* Immagine prodotto */
  .product-image-container {
    position: relative;
    margin-bottom: 1rem;
  }

  .product-image {
    width: 100%;
    height: 220px;
    object-fit: cover;
    background: #2a2a2a;
    transition: all 0.3s ease;
    border-radius: 20px 20px 0 0;
  }

  .product-card:hover .product-image {
    transform: scale(1.05);
  }

  .placeholder {
    width: 100%;
    height: 220px;
    background: linear-gradient(135deg, #2a2a2a 0%, #3a3a3a 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    color: #666;
    font-size: 3rem;
    transition: all 0.3s ease;
    border-radius: 20px 20px 0 0;
  }

  .product-card:hover .placeholder {
    background: linear-gradient(135deg, #3a3a3a 0%, #4a4a4a 100%);
    color: #999;
  }

  .product-status {
    position: absolute;
    top: 0.75rem;
    right: 0.75rem;
    width: 12px;
    height: 12px;
    background: #34c759;
    border-radius: 50%;
    box-shadow: 0 4px 12px rgba(52, 199, 89, 0.5);
    transition: all 0.3s ease;
  }

  .product-card:hover .product-status {
    transform: scale(1.2);
    box-shadow: 0 6px 16px rgba(52, 199, 89, 0.6);
  }

  .product-content {
    padding: 1.75rem;
    transition: all 0.3s ease;
  }

  .product-title {
    font-size: 1.2rem;
    font-weight: 600;
    color: #fff;
    margin: 0 0 1rem 0;
    line-height: 1.4;
    transition: color 0.3s ease;
  }

  .product-card:hover .product-title {
    color: #34c759;
  }

  .product-meta {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .meta-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    color: #999;
    font-size: 0.9rem;
    transition: all 0.3s ease;
  }

  .meta-item:hover {
    color: #ccc;
  }

  .meta-item i {
    width: 16px;
    color: #666;
    transition: color 0.3s ease;
  }

  .meta-item:hover i {
    color: #34c759;
  }

  .scaffale-badge {
    background: linear-gradient(135deg, rgba(52, 199, 89, 0.2) 0%, rgba(52, 199, 89, 0.1) 100%);
    color: #34c759;
    padding: 0.4rem 1rem;
    border-radius: 12px;
    font-size: 0.85rem;
    font-weight: 600;
    display: inline-block;
    border: 1px solid rgba(52, 199, 89, 0.2);
    transition: all 0.3s ease;
  }

  .scaffale-badge:hover {
    background: linear-gradient(135deg, rgba(52, 199, 89, 0.3) 0%, rgba(52, 199, 89, 0.2) 100%);
    transform: translateY(-1px);
  }

  /* Stato vuoto */
  .empty-state {
    text-align: center;
    padding: 4rem 2rem;
    color: #999;
  }

  .empty-state i {
    font-size: 4rem;
    margin-bottom: 1rem;
    color: #666;
  }

  .empty-state h3 {
    margin: 0 0 1rem 0;
    color: #fff;
    font-size: 1.5rem;
  }

  .empty-state p {
    margin: 0;
    font-size: 1rem;
  }

  /* Sezione statistiche */
  .stats-section {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
    margin-top: 3rem;
  }

  .stat-card {
    background: #1e1e1e;
    border-radius: 16px;
    padding: 2rem;
    text-align: center;
    border: 1px solid rgba(255, 255, 255, 0.05);
    transition: all 0.3s ease;
  }

  .stat-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
  }

  .stat-number {
    font-size: 2.5rem;
    font-weight: 700;
    color: #34c759;
    margin: 0 0 0.5rem 0;
  }

  .stat-label {
    color: #999;
    font-size: 0.9rem;
    margin: 0;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .magazzino-container {
      padding: 1rem;
    }

    .page-header {
      flex-direction: column;
      align-items: flex-start;
    }

    .header-info {
      width: 100%;
    }

    .add-product-btn {
      width: 100%;
      justify-content: center;
    }

    .back-btn {
      width: 100%;
      justify-content: center;
    }

    .products-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .search-container {
      max-width: 100%;
    }

    .stats-section {
      grid-template-columns: 1fr;
    }
  }

  @media (max-width: 480px) {
    .header-text h1 {
      font-size: 1.5rem;
    }

    .product-content {
      padding: 1rem;
    }

    .stat-card {
      padding: 1.5rem;
    }

    .stat-number {
      font-size: 2rem;
    }

    /* Responsive per visualizzazione lista */
    .products-grid.view-list .product-content {
      padding: 0.75rem;
    }

    .products-grid.view-list .product-status.list-view-status {
      width: 10px;
      height: 10px;
      top: 0.3rem;
      right: 0.3rem;
    }
  }

  /* Animazioni per i risultati di ricerca */
  .product-card {
    animation: fadeInUp 0.4s ease-out;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Stile per elementi nascosti dalla ricerca */
  .product-card.hidden {
    display: none;
  }

  /* Paginazione */
  .pagination-container {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 2rem;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .pagination-info {
    color: #999;
    font-size: 0.9rem;
    margin: 0 1rem;
  }

  .pagination-btn {
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 8px;
    text-decoration: none;
    transition: all 0.3s ease;
    font-size: 0.9rem;
    cursor: pointer;
    backdrop-filter: blur(10px);
  }

  .pagination-btn:hover {
    background: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.3);
    transform: translateY(-1px);
  }

  .pagination-btn.active {
    background: #34c759;
    border-color: #34c759;
    color: white;
  }

  .pagination-btn.disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }

  .pagination-btn.disabled:hover {
    transform: none;
    background: rgba(255, 255, 255, 0.1);
  }
</style>

<div class="magazzino-container">
  <!-- Header della pagina -->
  <div class="page-header">
    <div class="header-info">
      <div class="header-icon">
        <i class="fas fa-box"></i>
      </div>
      <div class="header-text">
        <h1>In Magazzino</h1>
        <p>Prodotti disponibili nel magazzino</p>
      </div>
    </div>
    
  </div>

  <!-- Barra di ricerca -->
  <div class="search-section">
    <form method="GET" action="{{ path('app_magazzino') }}" class="search-container">
      <i class="fas fa-search search-icon"></i>
      <input type="text" id="searchInput" name="search" class="search-input" placeholder="Cerca prodotti per nome, descrizione o scaffale..." value="{{ search|default('') }}">
      <button type="submit" class="search-submit" style="display: none;"></button>
    </form>
    <div class="search-results" id="searchResults"></div>
  </div>

  <!-- Filtri -->
  <div class="filters">
    <div class="filter-group">
      <label for="scaffaleFilter">Scaffale:</label>
      <select id="scaffaleFilter" class="filter-select">
        <option value="">Tutti</option>
        {% for scaffaleOption in scaffali %}
        <option value="{{ scaffaleOption }}" {% if scaffale == scaffaleOption %}selected{% endif %}>{{ scaffaleOption }}</option>
        {% endfor %}
      </select>
    </div>
  </div>

  <!-- Controlli visualizzazione -->
  <div class="view-controls">
    <button class="view-btn active" data-view="1col">
      <i class="fas fa-square"></i>
    </button>
    <button class="view-btn" data-view="2cols">
      <i class="fas fa-th-large"></i>
    </button>
    <button class="view-btn" data-view="list">
      <i class="fas fa-list"></i>
    </button>
  </div>

  <!-- Griglia prodotti -->
  <div class="products-grid" id="productsGrid">
    {% if prodotti|length > 0 %}
      {% for prodotto in prodotti %}
        {% if not prodotto.out %}
          <div class="product-card" data-search="{{ prodotto.getName()|lower }} {{ prodotto.getDescription()|lower }} {{ prodotto.getScaffale()|lower }}">
            <!-- Status indicator for list view -->
            <div class="product-status list-view-status in"></div>
            <a href="{{ path('app_prodotto_detail', {'id': prodotto.id}) }}" style="text-decoration: none; color: inherit;">
              <!-- Immagine prodotto -->
              <div class="product-image-container">
                {% if prodotto.getImage() %}
                 {% set rawImg = prodotto.getImage() %}
                 {% if rawImg %}
                   {% set fileName = rawImg|split('/')|last %}
                   {% set normalized = (rawImg starts with 'uploads/') or (rawImg starts with '/uploads/') ? (rawImg starts with '/' ? rawImg|slice(1) : rawImg) : 'uploads/images/' ~ fileName %}
                   <img src="{{ asset(normalized) }}" alt="{{ prodotto.getName() }}" class="product-image">
                 {% endif %}
                {% else %}
                  <div class="placeholder">
                    <i class="fas fa-image"></i>
                  </div>
                {% endif %}
                

              </div>
              <div class="product-content">
                <h3 class="product-title">{{ prodotto.getName() }}</h3>
                <div class="product-meta">
                  {% if prodotto.getScaffale() %}
                    <div class="meta-item">
                      <i class="fas fa-box"></i>
                      <span class="scaffale-badge">{{ prodotto.getScaffale() }}</span>
                    </div>
                  {% endif %}
                  <div class="meta-item">
                    <i class="fas fa-calendar"></i>
                    <span>{{ prodotto.getCreatedAt()|date('d/m/Y') }}</span>
                  </div>
                </div>
              </div>
            </a>
          </div>
        {% endif %}
      {% endfor %}
    {% else %}
      <div class="empty-state">
        <i class="fas fa-box-open"></i>
        <h3>Nessun prodotto in magazzino</h3>
        <p>Aggiungi il tuo primo prodotto per iniziare</p>
      </div>
    {% endif %}
  </div>

  <!-- Statistiche -->
  <div class="stats-section">
    <div class="stat-card">
      <div class="stat-number">{{ stats.in_magazzino }}</div>
      <div class="stat-label">Prodotti in Magazzino</div>
    </div>
    <div class="stat-card">
      <div class="stat-number">{{ stats.fuori_magazzino }}</div>
      <div class="stat-label">Prodotti Fuori</div>
    </div>
    <div class="stat-card">
      <div class="stat-number">{{ stats.total }}</div>
      <div class="stat-label">Totale Prodotti</div>
    </div>
  </div>

  <!-- Paginazione -->
  {% if totalPages > 1 %}
    <div class="pagination-container">
      <!-- Pulsante Precedente -->
      {% if currentPage > 1 %}
        <a href="{{ path('app_magazzino', {'page': currentPage - 1, 'search': search}) }}" class="pagination-btn">
          <i class="fas fa-chevron-left"></i> Precedente
        </a>
      {% else %}
        <span class="pagination-btn disabled">
          <i class="fas fa-chevron-left"></i> Precedente
        </span>
      {% endif %}

      <!-- Informazioni pagina -->
      <div class="pagination-info">
        Pagina {{ currentPage }} di {{ totalPages }}
      </div>

      <!-- Numeri delle pagine -->
      {% set startPage = max(1, currentPage - 2) %}
      {% set endPage = min(totalPages, currentPage + 2) %}
      
      {% if startPage > 1 %}
        <a href="{{ path('app_magazzino', {'page': 1, 'search': search}) }}" class="pagination-btn">1</a>
        {% if startPage > 2 %}
          <span class="pagination-btn disabled">...</span>
        {% endif %}
      {% endif %}

      {% for page in startPage..endPage %}
        {% if page == currentPage %}
          <span class="pagination-btn active">{{ page }}</span>
        {% else %}
          <a href="{{ path('app_magazzino', {'page': page, 'search': search}) }}" class="pagination-btn">{{ page }}</a>
        {% endif %}
      {% endfor %}

      {% if endPage < totalPages %}
        {% if endPage < totalPages - 1 %}
          <span class="pagination-btn disabled">...</span>
        {% endif %}
        <a href="{{ path('app_magazzino', {'page': totalPages, 'search': search}) }}" class="pagination-btn">{{ totalPages }}</a>
      {% endif %}

      <!-- Pulsante Successivo -->
      {% if currentPage < totalPages %}
        <a href="{{ path('app_magazzino', {'page': currentPage + 1, 'search': search}) }}" class="pagination-btn">
          Successivo <i class="fas fa-chevron-right"></i>
        </a>
      {% else %}
        <span class="pagination-btn disabled">
          Successivo <i class="fas fa-chevron-right"></i>
        </span>
      {% endif %}
    </div>
  {% endif %}
</div>

<script>
  // Funzione debounce per ottimizzare la ricerca
  function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
      const later = () => {
        clearTimeout(timeout);
        func(...args);
      };
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
    };
  }

  // Funzione di ricerca
  function performSearch() {
    const searchTerm = document.getElementById('searchInput').value.toLowerCase();
    const productCards = document.querySelectorAll('.product-card');
    const searchResults = document.getElementById('searchResults');
    let visibleCount = 0;

    productCards.forEach(card => {
      const searchData = card.getAttribute('data-search');
      if (searchData.includes(searchTerm)) {
        card.classList.remove('hidden');
        visibleCount++;
      } else {
        card.classList.add('hidden');
      }
    });

    // Aggiorna il contatore dei risultati
    if (searchTerm.length > 0) {
      searchResults.textContent = `${visibleCount} prodotto${visibleCount !== 1 ? 'i' : ''} trovato${visibleCount !== 1 ? 'i' : ''}`;
    } else {
      searchResults.textContent = '';
    }
  }

  // Event listener per la ricerca con debounce
  document.getElementById('searchInput').addEventListener('input', debounce(performSearch, 300));

  // Gestione invio form di ricerca
  document.querySelector('.search-container').addEventListener('submit', function(e) {
    e.preventDefault();
    const searchTerm = document.getElementById('searchInput').value.trim();
    if (searchTerm) {
      // Invia il form per la ricerca lato server
      this.submit();
    }
  });

  // Gestione tasto Invio nella barra di ricerca
  document.getElementById('searchInput').addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
      e.preventDefault();
      const searchTerm = this.value.trim();
      if (searchTerm) {
        // Invia il form per la ricerca lato server
        this.closest('form').submit();
      }
    }
  });

  // Gestione svuotamento barra di ricerca
  document.getElementById('searchInput').addEventListener('input', function(e) {
    const searchTerm = this.value.trim();
    
    // Se la barra è vuota e c'è un parametro di ricerca nell'URL, torna alla pagina iniziale
    if (searchTerm === '' && window.location.search.includes('search=')) {
      // Rimuovi il parametro di ricerca dall'URL e ricarica la pagina
      const url = new URL(window.location);
      url.searchParams.delete('search');
      window.location.href = url.toString();
    }
  });

  // Focus automatico sulla barra di ricerca
  document.getElementById('searchInput').focus();

  // Gestione della visualizzazione
  document.addEventListener('DOMContentLoaded', function() {
    const productsGrid = document.getElementById('productsGrid');
    const viewButtons = document.querySelectorAll('.view-btn');
    const scaffaleFilter = document.getElementById('scaffaleFilter');

    // Gestione filtro scaffale - invia richiesta al server
    if (scaffaleFilter) {
      scaffaleFilter.addEventListener('change', function() {
        const params = new URLSearchParams();
        const searchInput = document.getElementById('searchInput');
        if (searchInput.value) params.set('search', searchInput.value);
        if (this.value) params.set('scaffale', this.value);
        
        // Ricarica la pagina con i nuovi parametri
        window.location.href = window.location.pathname + (params.toString() ? '?' + params.toString() : '');
      });
    }

    // Carica la visualizzazione salvata o usa quella di default
    const savedView = localStorage.getItem('magazzino-view') || '1col';
    
    function updateView(view) {
      // Rimuovi tutte le classi di visualizzazione
      productsGrid.classList.remove('view-2cols', 'view-list');
      
      // Rimuovi active da tutti i pulsanti
      viewButtons.forEach(btn => btn.classList.remove('active'));
      
      // Aggiungi la classe appropriata e attiva il pulsante
      if (view === '2cols') {
        productsGrid.classList.add('view-2cols');
        document.querySelector('[data-view="2cols"]').classList.add('active');
      } else if (view === 'list') {
        productsGrid.classList.add('view-list');
        document.querySelector('[data-view="list"]').classList.add('active');
      } else {
        document.querySelector('[data-view="1col"]').classList.add('active');
      }
      
      // Salva la selezione
      localStorage.setItem('magazzino-view', view);
      
      // Aggiungi animazione di transizione
      productsGrid.style.opacity = '0.7';
      productsGrid.style.transform = 'scale(0.98)';
      
      setTimeout(() => {
        productsGrid.style.opacity = '1';
        productsGrid.style.transform = 'scale(1)';
      }, 200);
    }

    // Event listeners per i pulsanti
    viewButtons.forEach(button => {
      button.addEventListener('click', function() {
        const view = this.dataset.view;
        updateView(view);
        
        // Aggiungi feedback tattile
        this.style.transform = 'scale(0.95)';
        setTimeout(() => {
          this.style.transform = '';
        }, 150);
      });
    });

    // Imposta la visualizzazione iniziale
    updateView(savedView);
    
    // Aggiungi animazione di entrata per le card
    const productCards = document.querySelectorAll('.product-card');
    productCards.forEach((card, index) => {
      card.style.opacity = '0';
      card.style.transform = 'translateY(20px)';
      
      setTimeout(() => {
        card.style.transition = 'all 0.4s cubic-bezier(0.4, 0, 0.2, 1)';
        card.style.opacity = '1';
        card.style.transform = 'translateY(0)';
      }, index * 100);
    });
  });
</script>
{% endblock %}
